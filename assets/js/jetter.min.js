/*Jetter.js
  by theajack
  version 2.3.2,2017/1/13
  https://theajack.github.io/Jetter.js/
*/
/*jetSelect:You can use this independently,without jetter*/
var J = {
	ready: (function() {
		var b = [];
		var d = false;

		function c(g) {
			if (d) {
				return
			}
			if (g.type === "onreadystatechange" && document.readyState !== "complete") {
				return
			}
			for (var f = 0; f < b.length; f++) {
				b[f].call(document)
			}
			d = true;
			b = null
		}
		if (document.addEventListener) {
			document.addEventListener("DOMContentLoaded", c, false);
			document.addEventListener("readystatechange", c, false);
			window.addEventListener("load", c, false)
		} else {
			if (document.attachEvent) {
				document.attachEvent("onreadystatechange", c);
				window.attachEvent("onload", c)
			}
		}
		return function a(e) {
			if (d) {
				e.call(document)
			} else {
				b.push(e)
			}
		}
	})(),
	load: function(a) {
		if (document.addEventListener) {
			document.addEventListener("DOMContentLoaded", function() {
				document.removeEventListener("DOMContentLoaded", arguments.callee, false);
				a()
			}, false)
		} else {
			if (document.attachEvent) {
				document.attachEvent("onreadystatechange", function() {
					if (document.readyState == "complete") {
						document.detachEvent("onreadystatechange", arguments.callee);
						a()
					}
				})
			}
		}
	},
	height: function() {
		return document.body.offsetHeight
	},
	width: function() {
		return document.body.offsetWidth
	},
	class: function(a) {
		return j_checkSelect(document.getElementsByClassName(a))
	},
	id: function(a) {
		return document.getElementById(a)
	},
	tag: function(a) {
		return j_checkSelect(document.getElementsByTagName(a))
	},
	attr: function(a) {
		return j_checkSelect(document.querySelectorAll("[" + a + "]"))
	},
	name: function(a) {
		return j_checkSelect(document.getElementsByName(a))
	},
	select: function(a) {
		return j_checkSelect(document.querySelectorAll(a))
	},
	body: function() {
		return document.body
	},
	new: function(a) {
		if (a.has("#") || a.has(".") || a.has("[")) {
			var b = a.split('#');
			var c;
			if (a.has("[")) {
				var l = b[b.length - 1];
				c = l.substring(0, l.indexOf("[")).split('.');
				c[c.length - 1] += l.substring(l.indexOf("["))
			} else {
				c = b[b.length - 1].split('.')
			}
			var d = c.length - 1;
			var f = c[d].split('[');
			for (var i = 0; i < f.length; i++) {
				c[d + i] = f[i]
			}
			anum = f.length - 1;
			cnum = c.length - anum - 1;
			var e;
			if (b.length == 1) {
				e = document.createElement(c[0])
			} else {
				e = document.createElement(b[0]);
				e.attr("id", c[0])
			}
			for (var i = 1; i < c.length; i++) {
				if (cnum > 0) {
					cnum--;
					e.addClass(c[i])
				} else {
					var g = c[i].substring(0, c[i].length - 1).split("=");
					e.attr(g[0], g[1])
				}
			}
			return e
		} else {
			return document.createElement(a)
		}
	},
	scroll: function(a, b, c) {
		if (arguments.length != 0) {
			if (a != 0) {
				document.body.scroll(a, null, c);
				document.documentElement.scroll(a, null, c);
				if (b != undefined) {
					c = j_checkArg(c, 400);
					if (c.constructor!= Number) {
						c = j_checkAnimateSpeed(c)
					}
					if (b.constructor == String) {
						setTimeout(function() {
							eval(b)
						}, c)
					} else {
						setTimeout(b, c)
					}
				}
			}
		} else {
			if (document.body.scrollTop == 0) {
				return document.documentElement.scrollTop
			} else {
				return document.body.scrollTop
			}
		}
	},
	scrollTo: function(y, a, b) {
		document.body.scrollTo(y, null, b);
		document.documentElement.scrollTo(y, null, b);
		if (a != undefined) {
			b = j_checkArg(b, 400);
			if (b.constructor != Number) {
				b = j_checkAnimateSpeed(b)
			}
			if (a.constructor == String) {
				setTimeout(function() {
					eval(a)
				}, b)
			} else {
				setTimeout(a, b)
			}
		}
	},
	ajax: function(a) {
		var b = {
			type: a.type || "GET",
			url: a.url || "",
			async: a.async || "true",
			data: a.data || null,
			dataType: a.dataType || "text",
			contentType: a.contentType || "application/x-www-form-urlencoded",
			beforeSend: a.beforeSend ||
			function() {},
			success: a.success ||
			function() {},
			error: a.error ||
			function() {}
		};
		b.beforeSend();
		var c;
		if (window.ActiveXObject) {
			c = ActiveXObject("Microsoft.XMLHTTP")
		} else if (window.XMLHttpRequest) {
			c = XMLHttpRequest()
		}
		c.responseType = b.dataType;
		c.open(b.type, b.url, b.async);
		c.setRequestHeader("Content-Type", b.contentType);
		c.send(j_convertData(b.data));
		c.onreadystatechange = function() {
			if (c.readyState == 4) {
				if (c.status == 200) {
					b.success(c.response)
				} else {
					b.error()
				}
			}
		}
	},
	jsonp: function(options) {
		if (!options.url) {
			throw new Error("Parameter error");
			var callbackName = ('j_jsonp' + Math.random()).replace(".", "").substring(0, 15);
			var head = J.tag("head");
			options.data[j_checkArg(options.callback, "callback")] = callbackName;
			var script = J.new('script');
			head.append(script);
			window[callbackName] = function(a) {
				head.removeChild(script);
				clearTimeout(script.timer);
				window[callbackName] = null;
				options.success && options.success(JSON.parse(a))
			};
			if (options.dataType != undefined && options.dataType.toUpperCase() == "JSON") {
				script.attr("src", options.url + '?json=' + encodeURIComponent(JSON.stringify(options.data)))
			} else {
				script.attr("src", options.url + '?' + j_formatParams(options.data))
			}
			options.time = j_checkArg(options.callback, 5000);
			script.timer = setTimeout(function() {
				window[callbackName] = null;
				head.removeChild(script);
				options.timeout && options.timeout({
					message: "timeout"
				})
			}, options.time)
		}
	},
	cookie: function(a, b, d, e) {
		if (arguments.length == 1) {
			if (document.cookie.length > 0) {
				var f = document.cookie.indexOf(a + "=");
				if (f != -1) {
					f = f + a.length + 1;
					var g = document.cookie.indexOf(";", f);
					if (g == -1) g = document.cookie.length;
					return unescape(document.cookie.substring(f, g))
				}
			}
			return ""
		} else {
			if (b == null) {
				J.cookie(a, "", -1)
			} else {
				var c = a + "=" + escape(b);
				if (d != undefined) {
					var h = new Date();
					h.setDate(h.getDate() + d);
					c += ";expires=" + h.toGMTString()
				}
				if (e != undefined) {
					if (e.constructor == Boolean) {
						if (e) {
							c += (";path=/")
						}
					} else {
						c += (";path=" + e)
					}
				}
				document.cookie = c;
				return a + "=" + b
			}
		}
	}
};

function j_convertData(a) {
	if (typeof a === 'object') {
		var b = "";
		for (var c in a) {
			b += c + "=" + a[c] + "&"
		}
		b = b.substring(0, b.length - 1);
		return b
	} else {
		return a
	}
}
function j_formatParams(a) {
	var b = [];
	for (var c in a) {
		b.push(encodeURIComponent(c) + "=" + encodeURIComponent(a[c]))
	}
	return b.join("&")
}
var j = J;
J.ready(function() {
	J.tag("head").append(J.new("style").text(".j-animation{transition:all .5s linear!important;-moz-transition:all .5s linear!important;-webkit-transition:all .5s linear!important;-o-transition:all .5s linear!important}.j-slide{overflow:hidden!important;height:0!important;padding-top:0!important;padding-bottom:0!important}.j-fade{opacity:0!important}.j-display-none{display:none!important}@keyframes j-spin{from{transform:rotate(0)}to{transform:rotate(360deg)}}@-moz-keyframes j-spin{from{-moz-transform:rotate(0)}to{-moz-transform:rotate(360deg)}}@-webkit-keyframes j-spin{from{-webkit-transform:rotate(0)}to{-webkit-transform:rotate(360deg)}}@-o-keyframes j-spin{from{-o-transform:rotate(0)}to{-o-transform:rotate(360deg)}}.j-over-hidden{overflow:hidden!important;}"))
});

function S(s) {
	if (s == undefined) {
		return J.body()
	} else {
		return J.select(s)
	}
};
var s = S;

function j_checkSelect(b) {
	if (b.length == 1) {
		return b[0]
	}
	return b
};
HTMLElement.prototype.css = function(d, a) {
	if (a == undefined) {
		if (d.constructor == Object) {
			for (var b in d) {
				if (d[b].has("!")) {
					this.style.setProperty(b, j_checkCssValue(this, b, d[b].substring(0, d[b].indexOf("!"))), "important")
				} else {
					this.style.setProperty(b, j_checkCssValue(this, b, d[b]))
				}
			}
			return this
		} else {
			return getComputedStyle(this)[d]
		}
	} else {
		if (a.has("!")) {
			this.style.setProperty(d, j_checkCssValue(this, d, a.substring(0, a.indexOf("!"))), "important")
		} else {
			this.style.setProperty(d, j_checkCssValue(this, d, a))
		}
		return this
	}
};
HTMLCollection.prototype.css = NodeList.prototype.css = function(d, c) {
	if (c == undefined && d.constructor != Object) {
		var a = [];
		this.each(function(b) {
			a.append(b.css(d))
		});
		return a
	} else {
		this.each(function(a) {
			a.css(d, c)
		});
		return this
	}
};
HTMLElement.prototype.data = function(d, b) {
	if (arguments.length == 0) {
		if (this.hasAttr("jet-data")) {
			return JSON.parse(this.attr("jet-data"))
		} else {
			return null
		}
	} else if (arguments.length == 1) {
		if (d == undefined) {
			this.removeAttr("jet-data");
			return this
		} else {
			if (d.constructor == Object) {
				if (this.hasAttr("jet-data")) {
					var c = JSON.parse(this.attr("jet-data"));
					for (var e in d) {
						if (d[e] != undefined) {
							c[e] = d[e]
						} else {
							delete c[e]
						}
					}
					this.attr("jet-data", JSON.stringify(c))
				} else {
					this.attr("jet-data", JSON.stringify(d))
				}
				return this
			} else {
				if (this.hasAttr("jet-data")) {
					return JSON.parse(this.attr("jet-data"))[d]
				} else {
					return ""
				}
			}
		}
	} else {
		if (b == undefined) {
			if (this.hasAttr("jet-data")) {
				var c = JSON.parse(this.attr("jet-data"));
				if (d.constructor == Array) {
					d.each(function(a) {
						delete c[a]
					})
				} else {
					delete c[d]
				}
				this.attr("jet-data", JSON.stringify(c))
			}
			return this
		} else {
			if (this.hasAttr("jet-data")) {
				var c = JSON.parse(this.attr("jet-data"));
				c[d] = b;
				this.attr("jet-data", JSON.stringify(c))
			} else {
				var c = {};
				c[d] = b;
				this.attr("jet-data", JSON.stringify(c))
			}
			return this
		}
	}
};
HTMLCollection.prototype.data = NodeList.prototype.data = function(d, c) {
	if (c == undefined && d.constructor != Object && d != undefined) {
		var a = [];
		this.each(function(b) {
			a.append(b.data(d))
		});
		return a
	} else {
		if (c == undefined) {
			this.each(function(a) {
				a.data(d)
			})
		} else {
			this.each(function(a) {
				a.data(d, c)
			})
		};
		return this
	}
};

function j_checkCssValue(a, c, d) {
	if (d.has("=")) {
		var e = j_getCssNumberValue(d.substring(d.indexOf("=") + 1));
		if (d.has("-=")) {
			e[0] = -e[0]
		}
		var b;
		if (d.has("%")) {
			b = j_getCssNumberValue(a.style[c])
		} else {
			b = j_getCssNumberValue(getComputedStyle(a)[c])
		}
		return (e[0] + b[0]) + e[1]
	}
	return d
};

function j_getCssNumberValue(a, b) {
	if (a == "" || a == undefined) {
		a = "0%"
	}
	if (b == undefined) {
		if (a.has("px")) {
			b = "px"
		} else if (a.has("%")) {
			b = "%"
		} else if (a.has("em")) {
			b = "em"
		} else {
			return [parseFloat(a), "px"]
		}
	}
	return [parseFloat(a.substring(0, a.indexOf(b))), b]
};

function j_checkStyleName(b) {
	var a = b.split("-");
	if (a.length <= 1) {
		return b
	} else {
		var c = a[0];
		for (var i = 1; i < a.length; i++) {
			c += (a[i].charAt(0).toUpperCase() + a[i].substring(1))
		}
		return c
	}
};
HTMLElement.prototype.attr = function(c, b) {
	if (b == undefined) {
		if (c.constructor == Object) {
			for (var a in c) {
				this.setAttribute(a, c[a])
			}
			return this
		} else {
			return this.getAttribute(c)
		}
	} else {
		this.setAttribute(c, b);
		return this
	}
};
HTMLCollection.prototype.attr = NodeList.prototype.attr = function(d, c) {
	if (c == undefined && d.constructor != Object) {
		var a = [];
		this.each(function(b) {
			a.append(b.attr(d))
		});
		return a
	} else {
		this.each(function(a) {
			a.attr(d, c)
		});
		return this
	}
};
HTMLElement.prototype.hasAttr = function(a) {
	return this.hasAttribute(a)
};
HTMLElement.prototype.removeAttr = function(b) {
	var c = b.split(" ");
	if (c.length > 1) {
		var d = this;
		c.each(function(a) {
			d.removeAttribute(a)
		})
	} else {
		this.removeAttribute(b)
	}
	return this
};
HTMLCollection.prototype.removeAttr = NodeList.prototype.removeAttr = function(b) {
	this.each(function(a) {
		a.removeAttr(b)
	});
	return this
};
HTMLElement.prototype.findClass = function(a) {
	return j_checkSelect(this.getElementsByClassName(a))
};
HTMLElement.prototype.findId = function(a) {
	return this.getElementById(a)
};
HTMLElement.prototype.findTag = function(a) {
	return j_checkSelect(this.getElementsByTagName(a))
};
HTMLElement.prototype.findAttr = function(a) {
	return j_checkSelect(this.querySelectorAll("[" + a + "]"))
};
HTMLElement.prototype.findName = function(a) {
	return j_checkSelect(this.querySelectorAll("[name=" + a + "]"))
};
HTMLElement.prototype.select = function(a) {
	return j_checkSelect(this.querySelectorAll(a))
};
HTMLElement.prototype.addClass = function(a) {
	var b = a.split(" ");
	if (b.length > 1) {
		var c = this;
		b.each(function(i) {
			if (!c.hasClass(i)) {
				c.className += " " + i
			}
		})
	} else {
		if (!this.hasClass(a)) {
			this.className += " " + a
		}
	}
	return this
};
HTMLCollection.prototype.addClass = NodeList.prototype.addClass = function(a) {
	this.each(function(b) {
		b.addClass(a)
	});
	return this
};
HTMLElement.prototype.replaceClass = function(a, b) {
	if (this.hasClass(a)) {
		this.addClass(b).removeClass(a)
	}
	return this
};
HTMLCollection.prototype.replaceClass = NodeList.prototype.replaceClass = function(a, b) {
	this.each(function(c) {
		c.replaceClass(a, b)
	});
	return this
};
HTMLElement.prototype.removeClass = function(a) {
	if (a == undefined) {
		this.className = ""
	} else {
		var c = a.split(" ");
		if (c.length > 1) {
			var d = this;
			c.each(function(i) {
				if (d.hasClass(i)) {
					var b = new RegExp("(\\s|^)" + i + "(\\s|$)");
					d.className = d.className.replace(b, " ")
				}
			})
		} else {
			if (this.hasClass(a)) {
				var b = new RegExp("(\\s|^)" + a + "(\\s|$)");
				this.className = this.className.replace(b, " ")
			}
		}
	}
	return this
};
HTMLCollection.prototype.removeClass = NodeList.prototype.removeClass = function(a) {
	this.each(function(b) {
		b.removeClass(a)
	});
	return this
};
HTMLElement.prototype.toggleClass = function(a) {
	var b = a.split(" ");
	var c = this;
	b.each(function(i) {
		if (c.hasClass(a)) {
			c.removeClass(a)
		} else {
			c.addClass(a)
		}
	});
	return this
};
HTMLCollection.prototype.toggleClass = NodeList.prototype.toggleClass = function(v) {
	this.each(function(b) {
		b.toggleClass(v)
	});
	return this
};
HTMLElement.prototype.val = function(a) {
	if (a == undefined && arguments.length == 0) {
		return this.value
	} else {
		if (this.tagName == "INPUT" || this.tagName == "TEXTAREA") {
			this.value = j_checkArg(a, "")
		}
		return this
	}
};
HTMLCollection.prototype.val = NodeList.prototype.val = function(v) {
	if (v == undefined) {
		var a = [];
		this.each(function(b) {
			a.append(b.val())
		});
		return a
	} else {
		this.each(function(b) {
			b.val(v)
		});
		return this
	}
};
HTMLElement.prototype.text = function(a) {
	if (a == undefined && arguments.length == 0) {
		return this.innerText
	} else {
		this.innerText = j_checkArg(a, "");
		return this
	}
};
HTMLCollection.prototype.text = NodeList.prototype.text = function(v) {
	if (v == undefined && arguments.length == 0) {
		var a = [];
		this.each(function(b) {
			a.append(b.text())
		});
		return a
	} else {
		this.each(function(b) {
			b.text(v)
		});
		return this
	}
};
HTMLElement.prototype.content = function(a) {
	if (this.tagName == "INPUT" || this.tagName == "TEXTAREA") {
		if (a == undefined && arguments.length == 0) {
			return this.value
		} else {
			this.value = j_checkArg(a, "")
		}
	} else {
		if (a == undefined && arguments.length == 0) {
			return this.innerText
		} else {
			this.innerText = j_checkArg(a, "")
		}
	}
	return this
};
HTMLCollection.prototype.content = NodeList.prototype.content = function(v) {
	if (v == undefined) {
		var a = [];
		this.each(function(b) {
			a.append(b.content())
		});
		return a
	} else {
		this.each(function(b) {
			b.content(v)
		});
		return this
	}
};
HTMLElement.prototype.copy = function() {
	return j_copy(this.content())
};

function j_copy(b) {
	var a = J.id("jCopyInput");
	if (a == undefined) {
		a = J.new("input").attr({
			"type": "text",
			"id": "jCopyInput"
		}).css({
			"height": "0",
			"position": "fixed"
		});
		J.body().append(a)
	}
	a.val(b).select();
	if (document.execCommand("Copy")) {
		return true
	} else {
		alert("Copy is not supported in your browser");
		return false
	}
};
HTMLElement.prototype.copyHtml = function() {
	return j_copy(this.html())
};
HTMLElement.prototype.html = function(a) {
	if (a == undefined) {
		return this.innerHTML
	} else {
		this.innerHTML = a;
		return this
	}
};
HTMLCollection.prototype.html = NodeList.prototype.html = function(v) {
	if (v == undefined) {
		var a = [];
		this.each(function(b) {
			a.append(b.html())
		});
		return a
	} else {
		this.each(function(b) {
			b.html(v)
		});
		return this
	}
};
HTMLElement.prototype.hasClass = function(a) {
	return new RegExp("(\\s|^)" + a + "(\\s|$)").test(this.className)
};
HTMLElement.prototype.next = function(i) {
	if (i != undefined) {
		return this.parent().child(this.index() + i)
	} else {
		return this.parent().child(this.index() + 1)
	}
};
HTMLElement.prototype.prev = function(i) {
	if (i != undefined) {
		return this.parent().child(this.index() - i)
	} else {
		return this.parent().child(this.index() - 1)
	}
};
HTMLElement.prototype.offset = function() {
	return {
		left: this.offsetLeft,
		top: this.offsetTop,
		height: this.offsetHeight,
		width: this.offsetWidth
	}
};
HTMLElement.prototype.left = function() {
	return this.offsetLeft
};
HTMLElement.prototype.top = function() {
	return this.offsetTop
};
HTMLElement.prototype.scrollTo = function(a, b, c) {
	var n = 0;
	var e = this;
	c = j_checkArg(c, 400);
	var f = j_checkAnimateSpeed(c) / 10;
	var g = (a - e.scrollTop) / f;
	var d = e.scrollTop;
	var h = setInterval(function() {
		d += g;
		e.scrollTop = Math.round(d);
		n++;
		if (n == f) {
			e.scrollTop = a;
			j_checkCallBack(b, e);
			clearTimeout(h)
		}
	}, 10);
	return this
};
HTMLCollection.prototype.scrollTo = NodeList.prototype.scrollTo = function(i, b, c) {
	this.each(function(a) {
		a.scrollTo(i, b, c)
	});
	return this
};
HTMLElement.prototype.scroll = function(i, a, b) {
	if (arguments.length == 0) {
		return this.scrollTop
	} else {
		return this.scrollTo(this.scrollTop + i, a, b)
	}
};
HTMLCollection.prototype.scroll = NodeList.prototype.scroll = function(i, b, c) {
	this.each(function(a) {
		a.scroll(i, b, c)
	});
	return this
};
HTMLElement.prototype.animate = function(a, b, c, d) {
	var e = JSON.stringify(a);
	if (e.has("left") || e.has("top")) {
		if (this.css("position") == "static") {
			this.css({
				"position": "relative",
				"left": "0",
				"top": "0"
			})
		} else {
			if (this.style.top == "") {
				this.style.top = this.css("top")
			}
			if (this.style.left == "") {
				this.style.left = this.css("left")
			}
		}
	}
	if (e.has("height") && this.style.height == "") {
		this.style.height = this.css("height")
	}
	if (e.has("width") && this.style.width == "") {
		this.style.width = this.css("width")
	}
	this.addClass("j-animation");
	c = j_checkAnimatePara(this, c, d);
	var f = this;
	setTimeout(function() {
		f.css(a);
		setTimeout(function() {
			j_checkCallBack(b, f);
			f.removeClass("j-animation")
		}, c)
	}, 50);
	return this
};
HTMLCollection.prototype.animate = NodeList.prototype.animate = function(b, c, d, e) {
	this.each(function(a) {
		a.animate(b, c, d, e)
	});
	return this
};
HTMLElement.prototype.rotate = function(a, b, c, d, e) {
	var f = this;
	f.addClass("j-animation");
	setTimeout(function() {
		c = j_checkAnimatePara(f, c, e);
		j_checkOrigin(f, d);
		f.css({
			"transform": "rotate(" + a + "deg)",
			"-ms-transform": "rotate(" + a + "deg)",
			"-webkit-transform": "rotate(" + a + "deg)",
			"-o-transform": "rotate(" + a + "deg)",
			"-moz-transform": "rotate(" + a + "deg)"
		});
		setTimeout(function() {
			j_checkCallBack(b, f);
			j_removeAnimation(f)
		}, c)
	}, 50);
	return this
};
HTMLElement.prototype.scale = function(a, b, c, d) {
	return j_scaleBase(this, a, a, b, c, d)
};
HTMLElement.prototype.scaleX = function(a, b, c, d) {
	return j_scaleBase(this, a, 1, b, c, d)
};
HTMLElement.prototype.scaleY = function(a, b, c, d) {
	return j_scaleBase(this, 1, a, b, c, d)
};

function j_checkCallBack(a, b) {
	if (a != undefined) {
		if (a.constructor == Function) {
			if (b != undefined) {
				a(b)
			} else {
				a()
			}
		} else {
			eval(a)
		}
	}
};
HTMLCollection.prototype.scale = NodeList.prototype.scale = function(b, c, d, e) {
	this.each(function(a) {
		a.scale(b, c, d, e)
	});
	return this
};
HTMLCollection.prototype.scaleX = NodeList.prototype.scaleX = function(b, c, d, e) {
	this.each(function(a) {
		a.scaleX(b, c, d, e)
	});
	return this
};
HTMLCollection.prototype.scaleY = NodeList.prototype.scaleY = function(b, c, d, e) {
	this.each(function(a) {
		a.scaleY(b, c, d, e)
	});
	return this
};

function j_scaleBase(a, x, y, b, c, d) {
	a.addClass("j-animation");
	setTimeout(function() {
		c = j_checkAnimatePara(a, c, d);
		a.css({
			"transform": "scale(" + x + "," + y + ")",
			"-ms-transform": "scale(" + x + "," + y + ")",
			"-webkit-transform": "scale(" + x + "," + y + ")",
			"-o-transform": "scale(" + x + "," + y + ")",
			"-moz-transform": "scale(" + x + "," + y + ")"
		});
		setTimeout(function() {
			j_checkCallBack(b, a);
			j_removeAnimation(a)
		}, c)
	}, 50);
	return a
};

function j_checkOrigin(a, o) {
	if (o == undefined) {
		o = "center"
	}
	a.css({
		"transform-origin": o,
		"-ms-transform-origin": o,
		"webkit-transform-origin": o,
		"-o-transform-origin": o,
		"-moz-transform-origin": o
	})
};
HTMLCollection.prototype.rotate = NodeList.prototype.rotate = function(b, c, d, e, f) {
	this.each(function(a) {
		a.rotate(b, c, d, e, f)
	});
	return this
};
HTMLElement.prototype.spin = function(a, b, c, d, e) {
	e = j_checkArg(e, "linear");
	b = j_checkArg(b, "infinite");
	if (a != undefined) {
		a = j_checkSpinSpeed(a)
	} else {
		a = 2
	}
	j_checkOrigin(this, c);
	if (b.constructor == Number) {
		this.stopSpin();
		var f = this;
		setTimeout(function() {
			j_helpSpin(a, b, c, d, e, f)
		}, 20)
	} else {
		j_helpSpin(a, b, c, d, e, this)
	}
	return this
};

function j_helpSpin(a, b, c, d, e, f) {
	f.css({
		"animation": "j-spin " + a + "s " + e + " 0s " + b,
		"-moz-animation": "j-spin " + a + "s " + e + " 0s " + b,
		"-webkit-animation": "j-spin " + a + "s " + e + " 0s " + b,
		"-o-animation": "j-spin " + a + "s " + e + " 0s " + b
	});
	if (b.constructor == Number) {
		if (d != undefined) {
			setTimeout(function() {
				j_checkCallBack(d, f)
			}, a * b * 1000)
		}
	}
};
HTMLCollection.prototype.spin = NodeList.prototype.spin = function(b, c, d, e, f) {
	this.each(function(a) {
		a.spin(b, c, d, e, f)
	});
	return this
};

function j_checkSpinSpeed(a) {
	if (a.constructor == String) {
		switch (a) {
		case "slower":
			a = 3;
			break;
		case "slow":
			a = 2.5;
			break;
		case "normal":
			a = 2;
			break;
		case "fast":
			a = 1.5;
			break;
		case "faster":
			a = 1;
			break;
		default:
			a = 2
		}
		return a
	} else {
		return a / 1000
	}
};
HTMLElement.prototype.stopSpin = function() {
	var a = this.css("transform");
	this.css({
		"animation": "none",
		"-moz-animation": "none",
		"-webkit-animation": "none",
		"-o-animation": "none",
		"transform": a
	});
	return this
};
HTMLCollection.prototype.stopSpin = NodeList.prototype.stopSpin = function() {
	this.each(function(a) {
		a.stopSpin()
	});
	return this
};

function j_removeAnimation(a) {
	a.removeClass("j-animation").css({
		"transition-duration": "0s!important",
		"-ms-transition-duration": "0s!important",
		"-webkit-transition-duration": "0s!important",
		"-o-transition-duration": "0s!important",
		"-moz-transition-duration": "0s!important"
	})
};
HTMLElement.prototype.slideUp = function(a, b, c) {
	return j_animateBase(this, "j-slide", a, b, c, false)
};
HTMLElement.prototype.slideDown = function(a, b, c) {
	if (this.hasClass("j-fade")) {
		this.removeClass("j-fade").addClass("j-slide")
	}
	return j_animateBase(this, "j-slide", a, b, c, true)
};
HTMLElement.prototype.slideToggle = function(a, b, c) {
	if (this.hasClass("j-fade")) {
		this.removeClass("j-fade").addClass("j-slide")
	}
	return j_animateBase(this, "j-slide", a, b, c)
};
HTMLElement.prototype.fadeOut = function(a, b, c) {
	return j_animateBase(this, "j-fade", a, b, c, false)
};
HTMLElement.prototype.fadeIn = function(a, b, c) {
	if (this.hasClass("j-slide")) {
		this.removeClass("j-slide").addClass("j-fade")
	}
	return j_animateBase(this, "j-fade", a, b, c, true)
};
HTMLElement.prototype.fadeToggle = function(a, b, c) {
	if (this.hasClass("j-slide")) {
		this.removeClass("j-slide").addClass("j-fade")
	}
	return j_animateBase(this, "j-fade", a, b, c)
};
HTMLElement.prototype.hide = function() {
	if (!this.hasAttr("j-display")) {
		this.attr("j-display", this.css("display"));
		return this.css("display", "none!important")
	};
	return this
};
HTMLElement.prototype.show = function(a) {
	if (this.css("display") == "none") {
		this.css("display", "initial!important")
	}
	if (this.hasAttr("j-display")) {
		if (a == undefined) {
			this.removeClass("j-fade j-slide")
		}
		return this.css("display", this.attr("j-display") + "!important").removeAttr("j-display")
	};
	return this
};
HTMLElement.prototype.showToggle = function() {
	if (this.hasAttr("j-display")) {
		this.show()
	} else {
		this.hide()
	}
};

function j_animateBase(a, b, c, d, e, f) {
	if (f == undefined) {
		if (a.hasAttr("j-display")) {
			f = true
		} else {
			f = false
		}
	}
	a.addClass("j-animation");
	if (f) {
		if (a.css("display") == "none") {
			a.addClass(b)
		}
		a.show(false)
	}
	if (f != false) {
		setTimeout(function() {
			j_animateBasePart(a, b, c, d, e, f)
		}, 50)
	} else {
		j_animateBasePart(a, b, c, d, e, f)
	}
	return a
};

function j_animateBasePart(a, b, c, d, e, f) {
	d = j_checkAnimatePara(a, d, e);
	if (f) {
		if (b == "j-slide") {
			a.addClass("j-over-hidden")
		}
		a.removeClass(b)
	} else {
		a.addClass(b)
	}
	setTimeout(function() {
		j_checkCallBack(c, a);
		j_removeAnimation(a);
		if (!f) {
			a.hide()
		} else {
			if (b == "j-slide") {
				a.removeClass("j-over-hidden")
			}
		}
	}, d)
};

function j_checkAnimatePara(a, b, c) {
	if (b != undefined) {
		b = j_checkAnimateSpeed(b) / 1000
	} else {
		b = 0.5
	}
	a.css({
		"transition-duration": b + "s!important",
		"-ms-transition-duration": b + "s!important",
		"-webkit-transition-duration": b + "s!important",
		"-o-transition-duration": b + "s!important",
		"-moz-transition-duration": b + "s!important"
	});
	c = j_checkArg(c, "linear");
	a.css({
		"transition-timing-function": c + "!important",
		"-ms-transition-timing-function": c + "!important",
		"-webkit-transition-timing-function": c + "!important",
		"-o-transition-timing-function": c + "!important",
		"-moz-transition-timing-function": c + "!important"
	});
	return b * 1000
};
HTMLCollection.prototype.slideUp = NodeList.prototype.slideUp = function(b, c, d) {
	this.each(function(a) {
		a.slideUp(b, c, d)
	});
	return this
};
HTMLCollection.prototype.slideDown = NodeList.prototype.slideDown = function(b, c, d) {
	this.each(function(a) {
		a.slideDown(b, c, d)
	});
	return this
};
HTMLCollection.prototype.slideToggle = NodeList.prototype.slideToggle = function(b, c, d) {
	this.each(function(a) {
		a.slideToggle(b, c, d)
	});
	return this
};
HTMLCollection.prototype.fadeIn = NodeList.prototype.fadeIn = function(b, c, d) {
	this.each(function(a) {
		a.fadeIn(b, c, d)
	});
	return this
};
HTMLCollection.prototype.fadeOut = NodeList.prototype.fadeOut = function(b, c, d) {
	this.each(function(a) {
		a.fadeOut(b, c, d)
	});
	return this
};
HTMLCollection.prototype.fadeToggle = NodeList.prototype.fadeToggle = function(b, c, d) {
	this.each(function(a) {
		a.fadeToggle(b, c, d)
	});
	return this
};
HTMLCollection.prototype.hide = NodeList.prototype.hide = function() {
	this.each(function(a) {
		a.hide()
	});
	return this
};
HTMLCollection.prototype.show = NodeList.prototype.show = function() {
	this.each(function(a) {
		a.show()
	});
	return this
};
HTMLCollection.prototype.showToggle = NodeList.prototype.showToggle = function() {
	this.each(function(a) {
		a.showToggle()
	});
	return this
};

function j_checkAnimateSpeed(a) {
	if (a.constructor == String) {
		switch (a) {
		case "slower":
			a = 1500;
			break;
		case "slow":
			a = 1000;
			break;
		case "normal":
			a = 400;
			break;
		case "fast":
			a = 250;
			break;
		case "faster":
			a = 100;
			break;
		default:
			a = 400
		}
	}
	return a
};

function j_checkArg(a, b) {
	return (a == undefined) ? b : a
};
HTMLElement.prototype.scrollXTo = function(a, b, c) {
	var n = 0;
	var e = this;
	c = j_checkArg(c, 400);
	var f = j_checkAnimateSpeed(c) / 10;
	var g = (a - e.scrollLeft) / f;
	var d = e.scrollLeft;
	var h = setInterval(function() {
		d += g;
		e.scrollLeft = Math.round(d);
		n++;
		if (n == f) {
			e.scrollLeft = a;
			j_checkCallBack(b, e);
			clearTimeout(h)
		}
	}, 10);
	return this
};
HTMLCollection.prototype.scrollXTo = NodeList.prototype.scrollXTo = function(i, b, c) {
	this.each(function(a) {
		a.scrollXTo(i, b, c)
	});
	return this
};
HTMLElement.prototype.scrollX = function(i, a, b) {
	if (arguments.length == 0) {
		return this.scrollLeft
	} else {
		return this.scrollXTo(this.scrollLeft + i, a, b)
	}
};
HTMLCollection.prototype.scrollX = NodeList.prototype.scrollX = function(i, b, c) {
	this.each(function(a) {
		a.scrollX(i, b, c)
	});
	return this
};
HTMLElement.prototype.height = function() {
	return this.offsetHeight
};
HTMLElement.prototype.width = function() {
	return this.offsetWidth
};
HTMLElement.prototype.child = function(i) {
	if (i == undefined) {
		return this.children
	} else {
		return this.children[i]
	}
};
HTMLElement.prototype.parent = function(i) {
	if (i == undefined) {
		return this.parentElement
	} else {
		var p = this;
		for (var j = 0; j < i; j++) {
			p = p.parentElement
		}
		return p
	}
};
HTMLElement.prototype.brother = function(i) {
	if (i == undefined) {
		return this.parent().child()
	} else {
		return this.parent().child(i)
	}
};
HTMLElement.prototype.prepend = function(a) {
	if (a.constructor == Array) {
		var b = this;
		a.each(function(a) {
			b.insertBefore(a, this.children[0])
		})
	} else {
		this.insertBefore(a, this.children[0])
	}
	return this
};
HTMLCollection.prototype.prepend = NodeList.prototype.prepend = function(a) {
	this.each(function(c) {
		c.prepend(a)
	});
	return this
};
HTMLElement.prototype.append = function(b, a) {
	if (a == undefined) {
		if (b.constructor == Array) {
			var c = this;
			b.each(function(a) {
				c.appendChild(a)
			})
		} else {
			this.appendChild(b)
		}
	} else {
		this.insertBefore(b, this.children[a])
	}
	return this
};
HTMLElement.prototype.after = function(b) {
	if (b.constructor == Array) {
		var c = this;
		var d = c.next();
		b.each(function(a) {
			c.parent().insertBefore(a, d)
		})
	} else {
		this.parent().insertBefore(b, this.next())
	}
	return this
};
HTMLCollection.prototype.after = NodeList.prototype.after = function(b) {
	this.each(function(c) {
		c.after(b)
	});
	return this
};
HTMLElement.prototype.before = function(b) {
	if (b.constructor == Array) {
		var c = this;
		b.each(function(a) {
			c.parent().insertBefore(a, c)
		})
	} else {
		this.parent().insertBefore(b, this)
	}
	return this
};
HTMLCollection.prototype.before = NodeList.prototype.before = function(b) {
	this.each(function(c) {
		c.before(b)
	});
	return this
};
HTMLCollection.prototype.append = NodeList.prototype.append = function(b, a) {
	this.each(function(c) {
		c.append(b, a)
	});
	return this
};
HTMLElement.prototype.index = function() {
	var a = this.parent().child();
	for (var i = 0; i < a.length; i++) {
		if (a[i] == this) {
			return i
		}
	}
	return -1
};
HTMLElement.prototype.event = function(a, b) {
	if (b == undefined) {
		for (var c in a) {
			if (a[c] != undefined) {
				if (a[c].constructor == Function) {
					eval('this.' + c + '=' + a[c])
				} else {
					this.attr(c, a[c])
				}
			}
		}
	} else {
		if (b.constructor == Function) {
			eval('this.' + a + '=' + b)
		} else {
			this.attr(a, b)
		}
	}
	return this
};
HTMLCollection.prototype.event = NodeList.prototype.event = function(a, c) {
	this.each(function(b) {
		b.event(a, c)
	});
	return this
};
HTMLElement.prototype.empty = function() {
	return this.html("")
};
HTMLCollection.prototype.empty = NodeList.prototype.empty = function() {
	this.each(function(a) {
		a.empty()
	});
	return this
};
HTMLElement.prototype.remove = function() {
	this.parentNode.removeChild(this)
};
HTMLCollection.prototype.remove = NodeList.prototype.remove = function(a) {
	if (a == undefined) {
		for (var i = 0; i < this.length;) {
			this[i].remove()
		}
	} else {
		if (a.constructor == Number) {
			for (var i = 0; i < this.length; i++) {
				if (i == a) {
					this[i].remove();
					return this
				}
			}
		} else {
			for (var i = 0; i < this.length; i++) {
				if (this[i] == a) {
					this[i].remove();
					return this
				}
			}
		}
	}
};
HTMLElement.prototype.each = function(b) {
	b(this, 0);
	return this
};
HTMLCollection.prototype.each = NodeList.prototype.each = Array.prototype.each = function(b) {
	for (var a = 0; a < this.length; a++) {
		b(this[a], a)
	}
	return this
};
Array.prototype.removeByIndex = function(b) {
	for (var a = 0; a < this.length; a++) {
		if (a == b) {
			if (a < this.length - 1) {
				for (var i = a + 1; i < this.length; i++) {
					this[i - 1] = this[i]
				}
			}
			this.length--;
			return this
		}
	}
	return this
};
Array.prototype.empty = function(b) {
	this.length = 0
};
Array.prototype.remove = function(b) {
	for (var a = 0; a < this.length; a++) {
		if (this[a] == b) {
			if (a < this.length - 1) {
				for (var i = a + 1; i < this.length; i++) {
					this[i - 1] = this[i]
				}
			}
			this.length--;
			return this
		}
	}
	return this
};
Array.prototype.insert = function(b, i) {
	for (var a = this.length - 1; a >= i; a--) {
		this[a + 1] = this[a]
	}
	this[i] = b;
	return this
};
Array.prototype.append = function(b) {
	this[this.length] = b;
	return this
};
Array.prototype.prepend = function(b) {
	return this.insert(b, 0)
};
Array.prototype.sort = function(a) {
	var b = this.length;
	var c, current;
	for (var i = 1; i < b; i++) {
		c = i - 1;
		current = this[i];
		while (c >= 0 && this[c] > current) {
			this[c + 1] = this[c];
			c--
		}
		this[c + 1] = current
	}
	if (a == false) {
		this.reverse()
	}
	return this
};
Array.prototype.sortByAttr = function(a, b) {
	if (!(!parseFloat(this[0][a]))) {
		var c = this.length;
		var d, current;
		for (var i = 1; i < c; i++) {
			d = i - 1;
			current = this[i];
			while (d >= 0 && this[d][a] > current[a]) {
				this[d + 1] = this[d];
				d--
			}
			this[d + 1] = current
		}
		if (b == false) {
			this.reverse()
		}
	}
	return this
};
Array.prototype.reverse = function() {
	var t;
	var n = Math.floor(this.length / 2);
	for (var i = 0; i < n; i++) {
		t = this[i];
		this[i] = this[this.length - 1 - i];
		this[this.length - 1 - i] = t
	};
	return this
};
String.prototype.has = function(s) {
	if (s.constructor == String) {
		if (this.includes == undefined) {
			return (this.indexOf(s) != -1)
		} else {
			return this.includes(s)
		}
	} else {
		if (this.match(s) == null) {
			return false
		} else {
			return true
		}
	}
};
String.prototype.timesOf = function(s) {
	if (s.constructor == String) {
		return this.split(s).length - 1
	} else {
		var a = this.match(s);
		if (a == null) {
			return 0
		} else {
			return a.length
		}
	}
};
String.prototype.replaceAll = function(a, b) {
	if (b.constructor == Array) {
		if (a.constructor == String) {
			var s = this.split(a);
			var d = s[0];
			s.each(function(a, i) {
				if (i > 0) {
					d += (b[i - 1] + a)
				}
			});
			return d
		} else {
			var e = "";
			var f = this;
			var g = this.match(a);
			if (g != null) {
				g.each(function(a, i) {
					var c = f.split(a);
					e += (f.substring(0, f.indexOf(a)) + b[i]);
					f = f.substring(f.indexOf(a) + a.length)
				});
				e += f;
				return e
			}
			return this
		}
	} else {
		if (a.constructor == String) {
			return this.replace(new RegExp(a, "g"), b)
		} else {
			return this.replace(a, b)
		}
	}
};
String.prototype.indexsOf = function(a, i) {
	var b = this.split(a);
	var c = null;
	if (a.constructor != String) {
		c = this.match(a)
	}
	if (b.length <= 2) {
		if (this.indexOf(a) == -1) {
			return []
		} else {
			return [this.indexOf(a)]
		}
	} else {
		var d = [];
		var e = a.length;
		var f = 0;
		b.each(function(s, n) {
			if (n > 0) {
				d[d.length] = f;
				if (c != null) {
					f += c[n - 1].length
				} else {
					f += a.length
				}
			}
			f += s.length
		});
		if (i == undefined) {
			return d
		} else {
			if (i > d.length - 1) return d[d.length - 1];
			return d[i]
		}
	}
};
String.prototype.insert = function(a, i) {
	return this.substring(0, i) + a + this.substring(i)
};


/*jetter*/
J.ready(function() {
	Jet.initValid();
	J.jetForm = function(a) {
		return J.attr("jet-form=" + a)
	};
	J.jetName = function(a, b) {
		if (arguments.length == 2) {
			return J.attr("jet-form=" + a).findAttr("jet-name=" + b)
		} else {
			return J.attr("jet-name=" + a)
		}
	};
	J.tag("head").append(J.new("style").text(".jet-unpass{border-color:#f20!important;border-style:solid!important;background-color:rgba(255,0,0,.1)!important;color:red!important}.jet-icon-wrapper{width:100%;height:40px}.jet-icon-circle{display:block;width:40px;height:40px;margin:0 auto;border-radius:20px;border:5px solid #fff;position:relative}.jet-icon-circle span{background-color:#fff;display:block;position:absolute;border-radius:3px}.jet-icon-circle.jet-no-border{border-color:transparent;position:relative;top:3px;left:5px}.jet-icon-part-ok1{width:11px;height:7px;top:14px;left:5px}.jet-icon-part-ok2{width:7px;height:18px;top:7px;left:14px}.jet-icon-part-x{width:7px;height:20px;top:5px;left:11px}.jet-rotate-45{transform:rotate(45deg);-ms-transform:rotate(45deg);-webkit-transform:rotate(45deg);-o-transform:rotate(45deg);-moz-transform:rotate(45deg)}.jet-rotate-045{transform:rotate(-45deg);-ms-transform:rotate(-45deg);-webkit-transform:rotate(-45deg);-o-transform:rotate(-45deg);-moz-transform:rotate(-45deg)}.jet-icon-part-bar,.jet-icon-part-block{width:7px;left:11px}.jet-icon-part-block{height:7px}.jet-icon-part-bar{height:13px}.jet-icon-part-info1,.jet-icon-part-warn1{top:4px}.jet-icon-part-info2{top:13px}.jet-icon-part-warn2{top:19px}#jetConfirmWrapper,#jetConfirmWrapper *,#jetInputWrapper,#jetInputWrapper *,#jetNoteWrapper,#jetNoteWrapper *{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}#jetConfirmWrapper,#jetInputWrapper,#jetNoteWrapper{width:100%;position:fixed;z-index:100;transition:top .3s ease;top:-100%}#jetConfirmWrapper{z-index:101}#jetNoteWrapper{z-index:102}#jetConfirmContent,#jetInputContent{font-size:22px;padding:3% 10px 10px 10px;color:#fff;height:50%;white-space:normal;word-break:break-all}#jetConfirmBtnWrapper,#jetInputBtnWrapper{height:50px}#jetInputContent{padding:3% 10% 10px 10%}.jet-input{width:100%;color:#888;padding-left:5px;font-size:18px}.jet-input-text{text-align:left}#jetConfirmCancel,#jetConfirmOk,#jetInputCancel,#jetInputOk{width:50%;float:left;height:100%;border-top:4px solid rgba(255,255,255,.9);cursor:pointer}#jetConfirmOk{border-right:2px solid rgba(255,255,255,.9)}#jetConfirmCancel,#jetInputCancel{border-left:2px solid rgba(255,255,255,.9)}#jetConfirmLittleWrapper,#jetInputLittleWrapper,#jetNoteLittleWrapper{width:30%;min-height:65px;text-align:center;margin:0 auto;border:1px solid #666;border-radius:0 0 10px 10px;border-top:0;padding-top:10px;background-color:rgba(51,134,51,.9)}#jetConfirmLittleWrapper,#jetInputLittleWrapper{width:30%;background-color:rgba(136,136,136,.9);border-color:#bbb;padding-top:0}#jetInputLittleWrapper{background-color:rgba(100,100,100,.9)}#jetConfirmLittleWrapper.jet-large,#jetInputLittleWrapper.jet-large,#jetNoteLittleWrapper[jet-size=large]{width:70%}#jetConfirmLittleWrapper.jet-middle,#jetInputLittleWrapper.jet-middle,#jetNoteLittleWrapper[jet-size=middle]{width:50%}#jetNoteLittleWrapper[jet-style=gray].jet-success{background-color:rgba(210,210,210,.9);color:#444}#jetNoteLittleWrapper[jet-style=gray].jet-info .jet-icon-circle,#jetNoteLittleWrapper[jet-style=gray].jet-success .jet-icon-circle{border-color:#444}#jetNoteLittleWrapper[jet-style=gray].jet-info .jet-icon-circle span,#jetNoteLittleWrapper[jet-style=gray].jet-success .jet-icon-circle span{background-color:#444}#jetNoteLittleWrapper[jet-style=gray].jet-info{background-color:rgba(170,170,170,.9);color:#444}#jetNoteLittleWrapper[jet-style=gray].jet-warn{background-color:rgba(80,80,80,.9);color:#ccc}#jetNoteLittleWrapper[jet-style=gray].jet-error .jet-icon-circle,#jetNoteLittleWrapper[jet-style=gray].jet-warn .jet-icon-circle{border-color:#ccc}#jetNoteLittleWrapper[jet-style=gray].jet-error .jet-icon-circle span,#jetNoteLittleWrapper[jet-style=gray].jet-warn .jet-icon-circle span{background-color:#ccc}#jetNoteLittleWrapper[jet-style=gray].jet-error{background-color:rgba(40,40,40,.9);color:#ccc}#jetNoteLittleWrapper[jet-style=color]{border-color:#ddd;color:#fff}#jetNoteLittleWrapper[jet-style=color].jet-success{background-color:rgba(51,134,51,.9)}#jetNoteLittleWrapper[jet-style=color].jet-info{background-color:rgba(55,78,237,.9)}#jetNoteLittleWrapper[jet-style=color].jet-warn{background-color:rgba(237,149,58,.9)}#jetNoteLittleWrapper[jet-style=color].jet-error{background-color:rgba(212,73,73,.9)}#jetNoteLittleWrapper[jet-style=color] .jet-icon-circle,#jetNoteLittleWrapper[jet-style=gray] .jet-icon-circle{border-color:#fff}#jetNoteLittleWrapper[jet-style=color] .jet-icon-circle span,#jetNoteLittleWrapper[jet-style=gray] .jet-icon-circle span{background-color:#fff}#jetNoteContent{font-size:20px;margin-bottom:5px;padding-top:5px;white-space:normal;word-break:break-all}"))
});
var jet_t, jet_ct;
var Jet = {
	useDefaultStyle: true,
	useShowForValid: true,
	showInPlaceHolder: false,
	noteStyle: "color",
	language: "English",
	lang: function(l) {
		this.language = l
	},
	get: function(a, b, c) {
		c = j_checkArg(c, "jet-name");
		if (b != undefined && b != "json") {
			return jet_getElemsFormData(jet_checkJetForm(a), c)
		} else {
			return jet_getElemsObj(jet_checkJetForm(a), c)
		}
	},
	set: function(a, b, c, d) {
		d = j_checkArg(d, "jet-name");
		jet_setObjVal(jet_checkJetForm(a), d, b, c)
	},
	clear: function(a, b) {
		this.set(a, {}, null, b)
	},
	addValid: function(a, b) {
		b = j_checkArg(b, "notnull");
		jet_checkJetForm(a).addValid(b)
	},
	initValid: function(b) {
		var c;
		if (b == undefined) {
			c = J.attr("jet-valid")
		} else {
			c = jet_checkJetForm(b).select("[jet-valid]")
		}
		c.each(function(a) {
			a.attr({
				"onBlur": "jet_validInput(this)",
				"onfocus": "jet_addValidValue(this)"
			});
			if (Jet.showInPlaceHolder) {
				a.attr("placeholder", jet_getValueText(a.attr("jet-valid")))
			}
		})
	},
	clearValid: function(a) {
		jet_checkJetForm(a).clearValid()
	},
	validate: function(a, b, c) {
		if (c != undefined) {
			jet_validateForm(jet_checkJetForm(a), b, c)
		} else {
			jet_validateForm(jet_checkJetForm(a), b)
		}
	},
	banDefault: function() {
		this.useDefaultStyle = false;
		var b = J.class("jet-unpass");
		b.each(function(a) {
			jet_checkIsPw(a);
			a.removeClass("jet-unpass").val(a.attr("jet-value")).removeAttr("jet-value")
		})
	},
	useDefault: function() {
		this.useDefaultStyle = true
	},
	banValidShow: function() {
		this.useShowForValid = false
	},
	useValidShow: function() {
		this.useShowForValid = true
	},
	banPlaceHolder: function() {
		this.showInPlaceHolder = false;
		J.attr("jet-valid").each(function(a) {
			a.attr("placeholder", "")
		})
	},
	usePlaceHolder: function() {
		this.showInPlaceHolder = true;
		J.attr("jet-valid").each(function(a) {
			a.attr("placeholder", jet_getValueText(a.attr("jet-valid")))
		})
	},
	show: jet_mesShow,
	confirm: jet_confirmShow,
	showWait: jet_mesShowWait,
	close: jet_mesClose,
	confirmClose: jet_confirmClose,
	inputClose: jet_inputClose,
	checkArg: j_checkArg,
	setNoteStyle: jet_setNoteStyle,
	onOnePass: function(c) {
		if (c == undefined) {
			jet_onOnePass = null
		} else {
			if (c.constructor == String) {
				jet_onOnePass = function(a, b) {
					eval(c)
				}
			} else {
				jet_onOnePass = c
			}
		}
	},
	onOneFail: function(c) {
		if (c == undefined) {
			jet_onOneFail = null
		} else {
			if (c.constructor == String) {
				jet_onOneFail = function(a, b) {
					eval(c)
				}
			} else {
				jet_onOneFail = c
			}
		}
	},
	turn: jet_turnPage,
	open: function(a) {
		window.open(a)
	},
	back: function() {
		window.history.back()
	},
	forward: function() {
		window.history.forward()
	},
	getUrlPara: jet_getUrlPara,
	sign: jet_sign,
	getRandom: jet_getRandomNum,
	isMobile: jet_isMobile,
	copy: j_copy,
	input: function(c, d, e) {
		var f = J.id("jetInputContent");
		if (f == undefined) {
			jet_addInputWrapper();
			f = J.id("jetInputContent")
		}
		f.empty();
		if (c.constructor == String) {
			f.append(J.new("div").text(j_checkArg(c, (this.language == "Chinese") ? "信息输入" : "Input Information")));
			jet_appendOneInput((this.language == "Chinese") ? "请输入：" : "Please input:", null, null)
		} else if (c.constructor == Array) {
			f.append(J.new("div").text(j_checkArg(c[0], (this.language == "Chinese") ? "信息输入" : "Input Information")));
			jet_appendOneInput(c[1], c[2], c[3]);
			if (c[3] != undefined) {
				this.initValid(f)
			}
		} else {
			f.append(J.new("div").text(j_checkArg(c.title, (this.language == "Chinese") ? "信息输入" : "Input Information")));
			var a = j_checkArg(c.
		default, []);
			var b = j_checkArg(c.valid, []);
			if (c.text == undefined || c.text.constructor == String) {
				jet_appendOneInput(c.text, a, b)
			} else {
				for (var i = 0; i < c.text.length; i++) {
					jet_appendOneInput(j_checkArg(c.text[i], (this.language == "Chinese") ? "请输入：" : "Please input:"), a[i], b[i])
				}
			}
			if (b.length > 0 || b.constructor == String) {
				this.initValid(f)
			}
		}
		if (d != undefined) {
			if (d.constructor == Function) {
				jet_submitCall = d
			} else {
				jet_submitCall = function() {
					eval(d)
				}
			}
		}
		if (e != undefined) {
			if (e.constructor == Function) {
				jet_submitCancelCall = e
			} else {
				jet_submitCancelCall = function() {
					eval(e)
				}
			}
		}
		J.id("jetInputWrapper").css("top", "0")
	}
};
var jet_submitCall = null,
	jet_submitCancelCall = null,
	jet_onOnePass = null,
	jet_onOneFail = null;

function jet_checkIsPw(a) {
	if (a.attr("jet-ispw") == "true") {
		a.attr("type", "password")
	}
};

function jet_inputOk() {
	if (jet_submitCall != undefined) {
		J.id("jetInputContent").validate(function() {
			jet_submitCall(J.id("jetInputContent").findClass("jet-input").val());
			jet_submitCall = null;
			jet_inputClose()
		})
	} else {
		jet_inputClose()
	}
};

function jet_inputCancel() {
	if (jet_submitCancelCall != undefined) {
		jet_submitCancelCall();
		jet_submitCancelCall = null
	}
	jet_inputClose()
};

function jet_inputClose() {
	J.id("jetInputWrapper").css("top", "-100%");
	setTimeout(function() {
		J.id("jetInputContent").empty()
	}, 300)
};

function jet_appendOneInput(a, b, c) {
	if (arguments.length == 1) {
		b = a.
	default;
		c = a.valid;
		a = j_checkArg(a.text, (Jet.language == "Chinese") ? "请输入：" : "Please input:")
	} else {
		a = j_checkArg(a, (Jet.language == "Chinese") ? "请输入：" : "Please input:")
	}
	J.id("jetInputContent").append(J.new("div").addClass("jet-input-text").text(a));
	var d = J.new("input.jet-input[type=text]");
	if (b != undefined) {
		d.val(b)
	}
	if (c != undefined) {
		d.attr("jet-valid", c)
	}
	J.id("jetInputContent").append(d)
};
HTMLElement.prototype.addValid = function(a) {
	if (this.hasAttr("jet-form")) {
		if (a.constructor == Object) {
			for (var b in a) {
				this.findAttr("jet-name=" + b).addValid(a[b])
			}
		} else {
			this.findAttr("jet-name").addValid(a)
		}
	} else {
		this.attr({
			"jet-valid": a,
			"onBlur": "jet_validInput(this)",
			"onfocus": "jet_addValidValue(this)"
		})
	}
	return this
};
HTMLCollection.prototype.addValid = NodeList.prototype.addValid = function(b) {
	if (b.constructor == Array) {
		this.each(function(a, i) {
			a.addValid(b[i])
		})
	} else {
		this.each(function(a) {
			a.addValid(b)
		})
	}
	return this
};
HTMLElement.prototype.clearValid = function() {
	if (this.hasAttr("jet-form")) {
		this.findAttr("jet-name").clearValid()
	} else {
		if (this.hasClass("jet-unpass")) {
			this.removeClass("jet-unpass").val(this.attr("jet-value"))
		}
		this.removeAttr("jet-valid onBlur onfocus jet-value")
	}
	return this
};
HTMLCollection.prototype.clearValid = NodeList.prototype.clearValid = function() {
	this.each(function(a) {
		a.clearValid()
	});
	return this
};
HTMLElement.prototype.getContent = function() {
	return jet_getContentForGet(this)
};
HTMLElement.prototype.get = function(a, b) {
	return Jet.get(this, a, b)
};
HTMLElement.prototype.initValid = function() {
	Jet.initValid(this);
	return this
};
HTMLCollection.prototype.initValid = NodeList.prototype.initValid = function() {
	this.each(function(a) {
		a.initValid()
	});
	return this
};
HTMLElement.prototype.set = function(a, b, c) {
	Jet.set(this, a, b, c);
	return this
};
HTMLElement.prototype.clear = function(a) {
	Jet.clear(this, a);
	return this
};
HTMLElement.prototype.validate = function(s, f) {
	jet_validateForm(this, s, f)
};
var jet = Jet;

function jet_checkJetForm(a) {
	if (a.constructor == String) {
		return J.select("[jet-form=" + a + "]")
	}
	return a
};

function jet_getElemsObj(d, b) {
	var a = d.select("[" + b + "]");
	var c = {};
	a.each(function(e) {
		c[e.attr(b)] = jet_getContentForGet(e)
	});
	return c
};

function jet_getElemsFormData(d, b) {
	var a = d.select("[" + b + "]");
	var c = new FormData();
	a.each(function(e) {
		c.append(e.attr(b), jet_getContentForGet(e))
	});
	return c
};

function jet_getContentForGet(b) {
	if (b.hasClass("jet-unpass")) {
		return b.attr("jet-value")
	} else {
		var a = b.content();
		return a
	}
};

function jet_setObjVal(c, a, b, f) {
	inputs = c.select("[" + a + "]");
	if (b.constructor == Object) {
		inputs.each(function(d) {
			var e = d.attr(a);
			d.content(b[e]);
			if (f != undefined) {
				f(d, b[e], e)
			}
		})
	} else {
		inputs.each(function(d) {
			var e = d.attr(a);
			d.content(b.get(e));
			if (f != undefined) {
				f(d, b.get(e), e)
			}
		})
	}
};

function jet_validInput(b, a) {
	var v = b.attr("jet-valid");
	var c = "";
	if (v.indexOf("lengthOfAny") != -1) {
		var e = v.substring(12, v.length - 1).split(",");
		var f = "lengthOfAny";
		var d = b.content();
		if (d.length >= parseInt(e[0]) && d.length <= parseInt(e[1])) {
			c = "true"
		} else {
			c = jet_getValidText(f, e)
		}
	} else {
		c = jet_checkValue(v, b.content())
	}
	if (c == "true") {
		if (Jet.useDefaultStyle) {
			b.removeClass("jet-unpass").attr("jet-value", "");
			jet_checkIsPw(b)
		}
		if (jet_onOnePass != undefined) jet_onOnePass(b, c)
	} else {
		if (Jet.useDefaultStyle) {
			b.attr("jet-value", b.content()).content(c).addClass("jet-unpass");
			if (b.attr("type") == "password") {
				b.attr("jet-ispw", "true").attr("type", "text")
			}
		}
		if (jet_onOneFail != undefined) jet_onOneFail(b, c);
		if (Jet.useShowForValid && a != false) {
			Jet.show(c, "error")
		}
	}
	return c
};

function jet_validInputOfForm(b) {
	if (b.hasClass("jet-unpass")) {
		if (jet_onOneFail != undefined) {
			jet_onOneFail(b, b.val())
		}
		return b.val()
	} else {
		return jet_validInput(b, false)
	}
};

function jet_addValidValue(a) {
	if (a.hasClass("jet-unpass")) {
		a.content(a.attr("jet-value"));
		jet_checkIsPw(a)
	}
};

function jet_validateForm(g, f, c) {
	var e = [];
	var b = true;
	if (c == undefined) {
		b = false
	}
	var d = true;
	var a = g.select("[jet-valid]");
	a.each(function(j) {
		var h = jet_validInputOfForm(j);
		if (h != "true") {
			d = false;
			if (b) {
				e[e.length] = {
					"obj": j,
					"error": h
				}
			}
		}
	});
	if (!d) {
		if (b) {
			if (c.constructor = Function) {
				c(e)
			} else {
				eval(c)
			}
		}
		var i = (Jet.language == "Chinese") ? "输入有误，请按提示改正。" : "Values is not expected";
		if (Jet.useShowForValid) {
			Jet.show(i, "error")
		} else {
			alert(i)
		}
	} else {
		if (f != undefined) {
			if (f.constructor = Function) {
				f()
			} else {
				eval(f)
			}
		}
	}
};

function jet_getElemsStrs(d, b) {
	var a = d.select("[" + b + "]");
	var c = [];
	a.each(function(e) {
		c[i] = [e.attr(b), jet_getContentForGet(e)]
	});
	return c
};
var validTextCn = {
	"null": "*可以为空",
	"notnull": "*必填",
	"date": "*格式为XXXX-XX-XX",
	"email": "*格式为XXX@XX.com",
	"number": "*须为纯数字",
	"idcard": "*17位数字加一位数字或X",
	"length": "*输入长度为",
	"url": "*请输入正确的网址",
	"float": "*请正确的小数",
	"lengthOfAny": "*输入长度为",
	"phone": "*须为11位纯数字",
	"letterStart": "*字母开头且长度为",
	"range": "*数字不在范围内",
	"express": "*自定义错误",
};
var validTextEn = {
	"null": "*null is allowed",
	"notnull": "*Required",
	"date": "*format:XXXX-XX-XX",
	"email": "*format:XXX@XX.com",
	"number": "*expect a number",
	"idcard": "*17 numbers plus a number or X",
	"length": "*length between",
	"url": "*Expect an url name",
	"float": "*Expect a float number",
	"lengthOfAny": "*length between",
	"phone": "*must be 11 digits",
	"letterStart": "*letter start and length",
	"range": "*not in range",
	"express": "*wrong express",
};

function jet_getValueText(b) {
	var c = 0;
	if (b.indexOf("range") != -1) {
		c = 6
	} else {
		if (b.indexOf("letterStart") != -1) {
			c = 12
		} else if (b.indexOf("length") != -1) {
			c = 7
		} else if (b.has("number") && b != "number") {
			c = 7
		}
	}
	if (c != 0) {
		var a = b.substring(c, b.length - 1).split(",");
		if (a[1] == undefined) {
			a[1] = a[0]
		}
		return jet_getValidText(b.substring(0, c - 1), a)
	} else {
		return jet_getValidText(b)
	}
};

function jet_getValidText(a, b) {
	if (Jet.language == "Chinese") {
		if (b == undefined) {
			return validTextCn[a]
		} else {
			var c = "";
			if (a.has("number")) {
				c = " 且长度为"
			}
			return validTextCn[a] + c + "[" + b[0] + "," + b[1] + "]"
		}
	} else {
		if (b == undefined) {
			return validTextEn[a]
		} else {
			var c = "";
			if (a.has("number")) {
				c = " and length between"
			}
			return validTextEn[a] + c + "[" + b[0] + "," + b[1] + "]"
		}
	}
};

function jet_getRegExp(f) {
	var d = -1;
	var c = -1;
	if (f.indexOf("length") != -1) {
		var e = f.substring(7, f.length - 1).split(",");
		f = "length";
		d = e[0];
		if (e[1] == undefined) {
			e[1] = e[0]
		}
		c = e[1]
	} else if (f.indexOf("letterStart") != -1) {
		var e = f.substring(12, f.length - 1).split(",");
		f = "letterStart";
		d = e[0];
		if (e[1] == undefined) {
			e[1] = e[0]
		}
		c = e[1]
	} else if (f.has("number") && f != "number") {
		var e = f.substring(7, f.length - 1).split(",");
		f = "number";
		d = e[0];
		if (e[1] == undefined) {
			e[1] = e[0]
		}
		c = e[1]
	} else if (f.has("express")) {
		d = f.substring(8, f.length - 1);
		f = "express"
	}
	switch (f) {
	case "null":
		return /^\S{0}$/;
		break;
	case "date":
		return /^(([12]\d{3}-((0[1-9])|(1[0-2]))-((0[1-9])|([1-2]\d)|3(0|1))))$/;
		break;
	case "email":
		return /^((\w*@\w*.com))$/;
		break;
	case "number":
		if (d >= 0) {
			return new RegExp("^-?(\\d{" + d + "," + c + "})$")
		} else {
			return /^-?(\d+)$/
		}
		break;
	case "float":
		return /^-?[1-9]\d*.\d*|0.\d*[1-9]\d*$/;
		break;
	case "idcard":
		return /^(\d{17}(X|\d))$/;
		break;
	case "url":
		return /^((https|http|ftp|rtsp|mms)?:\/\/)[^\s]+$/;
		break;
	case "phone":
		return /^([1]\d{10})$/;
		break;
	case "letterStart":
		return new RegExp("^([a-zA-Z]([a-zA-Z\\d]){" + (parseInt(d) - 1) + "," + (parseInt(c) - 1) + "})$");
		break;
	case "length":
		return new RegExp("^(([a-zA-Z\\d]){" + d + "," + c + "})$");
		break;
	case "express":
		return new RegExp(d);
		break;
	default:
		return "null";
		break
	}
};

function jet_checkValue(a, e) {
	if (a.indexOf("notnull") != -1) {
		if (e.length == 0) {
			return jet_getValueText("notnull")
		}
	} else if (a.indexOf("null") != -1) {
		var c = a.split(" ");
		var b = (c[0] == "null") ? c[1] : c[0];
		if (b.indexOf("range") != -1) {
			var d = jet_testRange(a, e);
			if (d != "true" && e != "") {
				return d
			}
		}
		if (!jet_getRegExp(b).test(e) && e != "") {
			return jet_getValueText(b)
		}
	} else {
		if (a.indexOf("range") != -1) {
			var d = jet_testRange(a, e);
			if (d != "true") {
				return d
			}
		} else {
			if (!jet_getRegExp(a).test(e)) {
				return jet_getValueText(a)
			}
		}
	}
	return "true"
};

function jet_testRange(b, c) {
	var a = b.substring(6, b.length - 1).split(",");
	b = "number";
	if (jet_getRegExp(b).test(c)) {
		if (parseInt(c) < parseInt(a[0]) || parseInt(c) > parseInt(a[1])) {
			return jet_getValidText("range", a)
		}
	} else {
		return jet_getValidText("number")
	}
	return "true"
};

function jet_getUrlPara() {
	var d = decodeURI(location.search.substring(1)).split("&");
	if (d.length == 0) {
		return ""
	} else {
		if (d.length == 1) {
			return d[0].split("=")[1]
		} else {
			var a = {};
			for (var c = 0; c < d.length; c++) {
				var b = d[c].split("=");
				a[b[0]] = b[1]
			}
			return a
		}
	}
};

function jet_turnPage(a) {
	window.location.href = (encodeURI(a))
};

function jet_getRandomNum(a, b) {
	return (a + Math.round(Math.random() * (b - a)))
};

function jet_sign(n) {
	if (n >= 0) {
		return 1
	}
	return -1
};

function jet_isMobile() {
	if ((/AppleWebKit.*Mobile/i).test(navigator.userAgent)) {
		return true
	} else {
		return false
	}
};

function jet_mesShow(a, b, c, d, e) {
	clearTimeout(jet_t);
	var f = J.id("jetNoteLittleWrapper");
	if (f == undefined) {
		jet_addNoteWrapper();
		f = J.id("jetNoteLittleWrapper")
	}
	var g = f.findClass("jet-icon-circle").child();
	if (!b) {
		g[0].className = "jet-icon-part-ok1 jet-rotate-45";
		g[1].className = "jet-icon-part-ok2 jet-rotate-45";
		b = "success"
	} else {
		switch (b) {
		case "success":
			g[0].className = "jet-icon-part-ok1 jet-rotate-45";
			g[1].className = "jet-icon-part-ok2 jet-rotate-45";
			break;
		case "warn":
			g[0].className = "jet-icon-part-bar jet-icon-part-warn1";
			g[1].className = "jet-icon-part-block jet-icon-part-warn2";
			break;
		case "error":
			g[0].className = "jet-icon-part-x jet-rotate-45";
			g[1].className = "jet-icon-part-x jet-rotate-045";
			break;
		case "info":
			g[0].className = "jet-icon-part-block jet-icon-part-info1";
			g[1].className = "jet-icon-part-bar jet-icon-part-info2";
			break;
		default:
			g[0].className = "jet-icon-part-ok1 jet-rotate-45";
			g[1].className = "jet-icon-part-ok2 jet-rotate-45";
			break
		}
	}
	f.className = "jet-" + b;
	J.id("jetNoteContent").text(a);
	J.id("jetNoteWrapper").css("top", "0");
	c = j_checkArg(c, 1500);
	if (c.constructor == String) {
		switch (c) {
		case "slower":
			c = 2500;
			break;
		case "slow":
			c = 2000;
			break;
		case "normal":
			c = 1500;
			break;
		case "fast":
			c = 1000;
			break;
		case "faster":
			c = 500;
			break;
		default:
			c = 1500
		}
	}
	jet_t = setTimeout(function() {
		if (e != false) {
			jet_t = setTimeout(function() {
				jet_mesClose();
				if (d != undefined) {
					d()
				}
			}, c)
		}
	}, 300)
};
var jet_okCall = null;
var jet_cancelCall = null;

function jet_confirmShow(a, b, c) {
	clearTimeout(jet_ct);
	var d = J.id("jetConfirmContent");
	if (d == undefined) {
		jet_addConfirmWrapper();
		d = J.id("jetConfirmContent")
	}
	d.text(a);
	J.id("jetConfirmWrapper").css("top", "0");
	if (b != undefined) {
		if (b.constructor == Function) {
			jet_okCall = b
		} else {
			jet_okCall = function() {
				eval(b)
			}
		}
	}
	if (c != undefined) {
		if (c.constructor == Function) {
			jet_cancelCall = c
		} else {
			jet_cancelCall = function() {
				eval(c)
			}
		}
	}
};

function jet_mesShowWait(a, b) {
	b = j_checkArg(b, "info");
	jet_mesShow(a, b, 0, function() {}, false)
};

function jet_mesClose() {
	J.id("jetNoteWrapper").css("top", "-100%")
};

function jet_confirmOk() {
	if (jet_okCall != null) {
		jet_okCall();
		jet_okCall = null
	}
	jet_confirmClose()
};

function jet_confirmCancel() {
	if (jet_cancelCall != null) {
		jet_cancelCall();
		jet_cancelCall = null
	}
	jet_confirmClose()
};

function jet_confirmClose() {
	J.id("jetConfirmWrapper").css("top", "-100%")
};

function jet_setNoteStyle(a) {
	if (a != "color") {
		a = "gray"
	}
	Jet.noteStyle = a;
	if (J.id("jetNoteLittleWrapper") != undefined) {
		J.id("jetNoteLittleWrapper").attr("jet-style", a)
	}
};

function jet_addNoteWrapper() {
	var a = J.new("span").addClass("jet-icon-circle").append([J.new("span"), J.new("span")]);
	var b = J.new("div").attr("id", "jetNoteIcon").addClass("jet-icon-wrapper").append(a);
	var c = J.new("div").attr("id", "jetNoteContent");
	var d = J.new("div").attr({
		"id": "jetNoteLittleWrapper",
		"jet-style": Jet.noteStyle
	}).append([b, c]);
	J.body().append(J.new("div").attr({
		"id": "jetNoteWrapper",
		"onclick": "Jet.close()"
	}).append(d));
	var w = J.width();
	if (w < 400) {
		J.id("jetNoteLittleWrapper").attr("jet-size", "large")
	} else if (w < 1200) {
		J.id("jetNoteLittleWrapper").attr("jet-size", "middle")
	}
};

function jet_addConfirmWrapper() {
	var a = J.new("span").addClass("jet-icon-circle jet-no-border").append([J.new("span").addClass("jet-icon-part-ok1 jet-rotate-45"), J.new("span").addClass("jet-icon-part-ok2 jet-rotate-45")]);
	var b = J.new("span").addClass("jet-icon-circle jet-no-border").append([J.new("span").addClass("jet-icon-part-x jet-rotate-45"), J.new("span").addClass("jet-icon-part-x jet-rotate-045")]);
	var c = J.new("div").attr({
		"id": "jetConfirmOk",
		"onclick": "jet_confirmOk()"
	}).append(a);
	var d = J.new("div").attr({
		"id": "jetConfirmCancel",
		"onclick": "jet_confirmCancel()"
	}).append(b);
	var e = J.new("div").attr("id", "jetConfirmBtnWrapper").append([c, d]);
	var f = J.new("div").attr("id", "jetConfirmContent");
	var g = J.new("div").attr("id", "jetConfirmLittleWrapper").append([f, e]);
	var h = J.new("div").attr("id", "jetConfirmWrapper").append(g);
	J.body().append(h);
	var w = J.width();
	if (w < 400) {
		J.id("jetConfirmLittleWrapper").addClass("jet-large")
	} else if (w < 1200) {
		J.id("jetConfirmLittleWrapper").addClass("jet-middle")
	}
};

function jet_addInputWrapper() {
	var a = J.new("span").addClass("jet-icon-circle jet-no-border").append([J.new("span").addClass("jet-icon-part-ok1 jet-rotate-45"), J.new("span").addClass("jet-icon-part-ok2 jet-rotate-45")]);
	var b = J.new("span").addClass("jet-icon-circle jet-no-border").append([J.new("span").addClass("jet-icon-part-x jet-rotate-45"), J.new("span").addClass("jet-icon-part-x jet-rotate-045")]);
	var c = J.new("div").attr({
		"id": "jetInputOk",
		"onclick": "jet_inputOk()"
	}).append(a);
	var d = J.new("div").attr({
		"id": "jetInputCancel",
		"onclick": "jet_inputCancel()"
	}).append(b);
	var e = J.new("div").attr("id", "jetInputBtnWrapper").append([c, d]);
	var f = J.new("div").attr("id", "jetInputContent");
	var g = J.new("div").attr("id", "jetInputLittleWrapper").append([f, e]);
	var h = J.new("div").attr("id", "jetInputWrapper").append(g);
	J.body().append(h);
	var w = J.width();
	if (w < 400) {
		J.id("jetInputLittleWrapper").addClass("jet-large")
	} else if (w < 1200) {
		J.id("jetInputLittleWrapper").addClass("jet-middle")
	}
};
